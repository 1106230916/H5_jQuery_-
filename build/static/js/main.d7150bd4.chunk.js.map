{"version":3,"sources":["index.js"],"names":["Record","props","isdoChange","bind","valueChange","delete","notice","e","this","isDo","index","console","log","target","value","Fragment","adata","isdo","className","classify","date","time_exact","type","checked","onChange","maxLength","onBlur","onClick","React","Component","RecordAdd","state","dateChange","textChange","addRecord","classifyChange","setState","alldata","alert","time","Date","data","getHours","slice","getMinutes","getSeconds","getFullYear","getMonth","getDate","placeholder","ToDoList","localStorage","getItem","JSON","parse","removeItem","setItem","stringify","push","updataAlldata","timeChange","splice","map","item","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7150bd4.chunk.js","sourcesContent":["import 'babel-polyfill';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nclass Record extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.isdoChange = this.isdoChange.bind(this);\r\n    this.valueChange = this.valueChange.bind(this);\r\n    this.delete = this.delete.bind(this);\r\n    this.notice = this.notice.bind(this);\r\n    // this.last_value = \"\";\r\n  }\r\n\r\n  isdoChange(e) {\r\n    this.props.isDo(this.props.index);\r\n  }\r\n  \r\n  valueChange(e) {\r\n    console.log(e.target, this.props.index);\r\n    this.props.valueChange(e.target.value, this.props.index)\r\n  }\r\n\r\n  delete(e) {\r\n    this.props.delete(this.props.index);\r\n  }\r\n\r\n  /*失去焦点时触发的事件，删除记录 */\r\n  notice(e) {\r\n    if (e.target.value === \"\") {\r\n      this.delete(this.props.index);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        {this.props.adata.isdo ? \r\n          <p className=\"time\">\r\n            <span>类别：\r\n              {this.props.adata.classify === \"living\" ? \"生活\" \r\n              : this.props.adata.classify === \"study\" ? \"学习\"\r\n              : \"工作\"  \r\n              }&nbsp;&nbsp;\r\n            </span>\r\n            <span>制定时间为:</span>\r\n            {this.props.adata.date}\r\n            &nbsp;&nbsp;---&nbsp;&nbsp;\r\n            <span>完成时间为:</span>\r\n            {this.props.adata.time_exact}\r\n          </p>\r\n          :\r\n          <p className=\"time\">\r\n            <span>类别：\r\n              {this.props.adata.classify === \"living\" ? \"生活\" \r\n              : this.props.adata.classify === \"study\" ? \"学习\"\r\n              : \"工作\"  \r\n              }&nbsp;&nbsp;\r\n            </span>\r\n            <span>制定时间为:</span>\r\n            {this.props.adata.date}\r\n          </p>\r\n        }\r\n        \r\n        <div className=\"content\">\r\n          <input\r\n              type=\"checkbox\"\r\n              checked={this.props.adata.isdo}\r\n              className=\"isdo\"\r\n              onChange={this.isdoChange}/>\r\n            {/** 根据里面是否有内容决定标签类型，没有做的为textarea可修改，已经做的为p标签不可修改 */}\r\n            {this.props.adata.isdo ? \r\n                <p\r\n                className=\"text\"\r\n                >\r\n                  {this.props.adata.value}\r\n                </p>\r\n                :\r\n                <input\r\n                type=\"text\"\r\n                maxLength=\"100\"\r\n                value={this.props.adata.value}\r\n                className=\"text\"\r\n                onChange={this.valueChange}\r\n                onBlur={this.notice}\r\n                />\r\n            }    \r\n            <input\r\n              type=\"button\"\r\n              value=\"delete\"\r\n              className=\"delete\"\r\n              onClick={this.delete}/>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nclass RecordAdd extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      \"value\": \"\",\r\n      \"date\": \"\",\r\n      \"classify\": \"living\"\r\n    }\r\n    this.dateChange = this.dateChange.bind(this);\r\n    this.textChange = this.textChange.bind(this);\r\n    this.addRecord = this.addRecord.bind(this);\r\n    this.classifyChange = this.classifyChange.bind(this);\r\n  }\r\n\r\n  classifyChange(e){\r\n    console.log(e.target.value);\r\n    const classify = e.target.value;\r\n    this.setState({\r\n      \"classify\": classify\r\n    })\r\n  }\r\n\r\n  addRecord(e) {\r\n    console.log(this.props.alldata);\r\n    const value = this.state.value;\r\n    if (value === \"\"){\r\n      alert(\"计划内容不可以为空哦！\")\r\n    } else {\r\n      const time = new Date();\r\n      const date = this.state.date;\r\n      const classify = this.state.classify;\r\n      const date_exact = \"  \" + \r\n                    (\"0\" + time.getHours()).slice(-2) + \":\" +\r\n                    (\"0\" + time.getMinutes()).slice(-2) + \":\" +\r\n                    (\"0\" + time.getSeconds()).slice(-2);\r\n      const data = {\r\n        \"classify\": classify,\r\n        \"isdo\": false,\r\n        \"value\": value,\r\n        \"date\": date + date_exact,\r\n      }\r\n      this.setState({\r\n        \"value\": \"\"\r\n      })\r\n      this.props.addRecord(data);\r\n    }\r\n  }\r\n\r\n  /* 渲染时更新时间为当天 */\r\n  componentDidMount(){\r\n    const time = new Date();\r\n    this.setState({\r\n      \"date\": time.getFullYear() + \"-\" +\r\n              (\"0\" + (time.getMonth() + 1)).slice(-2) + \"-\" +\r\n              (\"0\" + time.getDate()).slice(-2)\r\n    });\r\n  };\r\n\r\n  /* 文本框内的内容 */\r\n  textChange(e) {\r\n    const value = e.target.value;\r\n    this.setState({\r\n      \"value\": value\r\n    })\r\n    console.log(value);\r\n  }\r\n\r\n  /* 调整时间 */\r\n  dateChange(e){\r\n    const time = e.target.value;\r\n    this.setState({\r\n      \"date\": time\r\n    });\r\n    console.log(e.target.value)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"add_list\">\r\n        <input\r\n          type=\"date\"\r\n          value={this.state.date}\r\n          onChange={this.dateChange}/>\r\n        <select onChange={this.classifyChange}>\r\n          <option value=\"living\">生活</option>\r\n          <option value=\"study\">学习</option>\r\n          <option value=\"work\">工作</option>\r\n        </select>\r\n        <input \r\n          type=\"text\"\r\n          placeholder=\"制定你的计划......\"\r\n          onChange={this.textChange}\r\n          value={this.state.value}/>\r\n        <input\r\n          type=\"button\" \r\n          value=\"add a record\"\r\n          className=\"add\"\r\n          onClick={this.addRecord}/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nclass ToDoList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      \"alldata\": [],\r\n      \"classify\": \"\",\r\n    };\r\n    this.valueChange = this.valueChange.bind(this);\r\n    this.addRecord = this.addRecord.bind(this);\r\n    this.delete = this.delete.bind(this);\r\n    this.isDo = this.isDo.bind(this);\r\n    this.classifyChange = this.classifyChange.bind(this);\r\n  }\r\n\r\n  /** 渲染后进行 */\r\n  componentDidMount() {\r\n    let alldata = localStorage.getItem(\"alldata\") === null \r\n    ? [] : JSON.parse(localStorage.getItem(\"alldata\"));\r\n    console.log(\"打开时渲染：\", alldata);\r\n    this.setState({\r\n      \"alldata\": alldata\r\n    });\r\n  }\r\n\r\n  /* 更新localStorage 的内容 */\r\n  updataAlldata() {\r\n    const alldata = this.state.alldata;\r\n    this.setState({\r\n      \"alldata\": alldata\r\n    });\r\n    localStorage.removeItem(\"alldata\");\r\n    localStorage.setItem(\"alldata\", JSON.stringify(alldata));\r\n  }\r\n\r\n  /* 改变备忘录中的记录的任何内容时更新时间 */\r\n  timeChange(index, isdo){\r\n    const alldata = this.state.alldata;\r\n    const time = new Date();\r\n    const time_exact = time.getFullYear() + \"-\" +\r\n                      (\"0\" + (time.getMonth() + 1)).slice(-2) + \"-\" +\r\n                      (\"0\" + time.getDate()).slice(-2) + \"  \" + \r\n                      (\"0\" + time.getHours()).slice(-2) + \":\" +\r\n                      (\"0\" + time.getMinutes()).slice(-2) + \":\" +\r\n                      (\"0\" + time.getSeconds()).slice(-2);  \r\n    if (isdo) {\r\n      alldata[index].time_exact = time_exact;\r\n    } else {\r\n      alldata[index].date = time_exact;\r\n    }\r\n  }\r\n\r\n  /* 点击后添加 */\r\n  addRecord(data) {\r\n    console.log(\"Add a record\");\r\n    const alldata = this.state.alldata;\r\n    alldata.push(data);\r\n    this.updataAlldata();\r\n  }\r\n\r\n  valueChange(value, index) {\r\n    console.log(value, index);\r\n    const alldata = this.state.alldata;\r\n    if(value === alldata[index].value) {\r\n      console.log(\"没有修改，不用更改时间\")\r\n    } else {\r\n      alldata[index].value = value;\r\n      this.timeChange(index);\r\n      this.updataAlldata();\r\n    }\r\n  }\r\n\r\n  /* 改变isdo，改变后如果为true，则修改“制定时间”；如果为false，则修改完成时间 */\r\n  isDo(index) {\r\n    const alldata = this.state.alldata;\r\n    alldata[index].isdo = !alldata[index].isdo;\r\n    console.log(index + \"现在是：\" + alldata[index].isdo)\r\n    if (alldata[index].isdo) {\r\n      this.timeChange(index, alldata[index].isdo);\r\n    } else {\r\n      this.timeChange(index, alldata[index].isdo);\r\n    }\r\n    this.updataAlldata();\r\n  }\r\n\r\n  /* 删除记录 */\r\n  delete(index) {\r\n    console.log(\"Delete a record\");\r\n    const alldata = this.state.alldata;\r\n    alldata.splice(index, 1);\r\n    this.updataAlldata();\r\n  }\r\n\r\n  classifyChange(e) {\r\n    console.log(e);\r\n    this.setState({\r\n      \"classify\": e,\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const alldata = this.state.alldata;\r\n    const classify = this.state.classify;\r\n    console.log(classify);\r\n    return (\r\n      <div>\r\n        {/* 导航栏，点击后会切换黑底白字，以及分类切换 */}\r\n        <div className=\"chooses\">\r\n        <span\r\n          className={classify === \"\" ? \"items activity\" : \"items\"} \r\n          onClick={this.classifyChange.bind(this, \"\")}>\r\n            全部\r\n        </span>\r\n        <span\r\n          className={classify === \"living\" ? \"items activity\" : \"items\"} \r\n          onClick={this.classifyChange.bind(this, \"living\")}>\r\n            生活\r\n        </span>\r\n        <span\r\n          className={classify === \"study\" ? \"items activity\" : \"items\"} \r\n          onClick={this.classifyChange.bind(this, \"study\")}>\r\n            学习\r\n        </span>\r\n        <span\r\n          className={classify === \"work\" ? \"items activity\" : \"items\"} \r\n          onClick={this.classifyChange.bind(this, \"work\")}>\r\n            工作\r\n        </span>\r\n        </div>\r\n        {/* 点击添加 */}\r\n        <RecordAdd\r\n          alldata={this.state.alldata}\r\n          addRecord={this.addRecord}/>\r\n        <hr></hr>\r\n        {/* 未做过的 */}\r\n        <div>\r\n          <p className=\"title\">还没有做的事情：</p>\r\n          {alldata.map((item, index) => {\r\n            if (classify === \"\") {\r\n              if (!item.isdo) {\r\n                return (\r\n                <div key={index}>\r\n                  <Record\r\n                    index={index}\r\n                    adata={item}\r\n                    valueChange={this.valueChange}\r\n                    delete={this.delete}\r\n                    isDo={this.isDo}/>\r\n                </div>)\r\n              }\r\n            } else {\r\n              if (!item.isdo) {\r\n                if (classify === item.classify){\r\n                  return (<div key={index}>\r\n                      <Record\r\n                        index={index}\r\n                        adata={item}\r\n                        valueChange={this.valueChange}\r\n                        delete={this.delete}\r\n                        isDo={this.isDo}/>\r\n                    </div>)\r\n                }\r\n              }\r\n            }\r\n            return \"\";\r\n          })}\r\n          \r\n        </div>\r\n        <hr></hr>\r\n        {/* 已经做了 */}\r\n        <div>\r\n          <p className=\"title\">已经做了的事情：</p>\r\n          {alldata.map((item, index) => {\r\n            if (classify === \"\") {\r\n              if(item.isdo) {\r\n                return (<div key={index}>\r\n                  <Record\r\n                    index={index}\r\n                    adata={item}\r\n                    valueChange={this.valueChange}\r\n                    delete={this.delete}\r\n                    isDo={this.isDo}/>\r\n                </div> )\r\n              }\r\n            } else {\r\n              if(item.isdo) {\r\n                if (classify === item.classify) {\r\n                  return (<div key={index}>\r\n                    <Record\r\n                      index={index}\r\n                      adata={item}\r\n                      valueChange={this.valueChange}\r\n                      delete={this.delete}\r\n                      isDo={this.isDo}/>\r\n                  </div> )\r\n                }\r\n              }\r\n            }\r\n            return \"\";\r\n            })}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nReactDOM.render(\r\n  <ToDoList />,\r\n  document.getElementById(\"root\")\r\n)"],"sourceRoot":""}